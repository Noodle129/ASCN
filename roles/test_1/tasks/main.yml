---

# mostrar que nao ha dashboard

# dar deploy a dar skip-tag ao updateDB
# mostrar que nao ha nada das tabelas do user
# dar deploy a dar a fazer apenas a tag updateDB
# mostrar que ha dados nas tabelas do user

# mostrar dashboard

# dar undeploy sem a flag delete_data
# dar deploy normal
# dar deploy a dar skip-tag ao updateDB
# mostrar que d√° para dar login

# dar undeploy com a flag delete_data
# dar deploy a dar skip-tag ao updateDB
# mostrar que nao ha nada das tabelas do user


- name: Check Dashboard
  shell: gcloud monitoring dashboards list --filter="displayName=Ghost_Monitoring" --format="value(name)"
  register: output_dashboard
# nao e suposto aparecer nenhuma info !!!
# se aparecer fazer este comando:
# gcloud monitoring dashboards delete [name...] -quiet

- name: Display Dashboard Info
  debug:
    msg: "{{ output_dashboard.stdout_lines }}"

- name: Deploy Ghost
  - include_role:
    name: ghost_deploy 

- name: Test Ghost
  - include_role:
    name: test_ghost

- name: Create dashboard
  - include_role:
    name: dashboard

- name: Check Dashboard
  shell: gcloud monitoring dashboards list --filter="displayName=Ghost_Monitoring" --format="value(name)"
  register: output_dashboard

- name: Display Dashboard Info
  debug:
    msg: "{{ output_dashboard.stdout_lines }}"

- name: Check 'user' table from ghost
  shell: kubectl exec -it {{ mysql_name_pod }} -- mysql --user="{{ database_user }}" --password="{{ database_password }}" --database="{{ database_name }}" -e "SELECT * FROM users;"
  register: output_user_table

- name: Add Blog Admin
  include_role:
    name: update-db

- name: Check 'user' table from ghost
  shell: kubectl exec -it {{ mysql_name_pod }} -- mysql --user="{{ database_user }}" --password="{{ database_password }}" --database="{{ database_name }}" -e "SELECT * FROM users;"
  register: output_user_table

- name: Undeploy Ghost (not deleting data)
  include_role:
    name: ghost_undeploy

- name: Deploy Ghost (not updating DB)
  include_role:
    name: ghost_deploy

- name: Check 'user' table from ghost
  shell: kubectl exec -it {{ mysql_name_pod }} -- mysql --user="{{ database_user }}" --password="{{ database_password }}" --database="{{ database_name }}" -e "SELECT * FROM users;"
  register: output_user_table

- name: Undeploy Ghost (deleting data)
  include_role:
    name: ghost_undeploy
  inlude_role:
    name: delete_data

- name: Deploy Ghost (not updating DB)
  include_role:
    name: ghost_deploy

- name: Check 'user' table from ghost
  shell: kubectl exec -it {{ mysql_name_pod }} -- mysql --user="{{ database_user }}" --password="{{ database_password }}" --database="{{ database_name }}" -e "SELECT * FROM users;"
  register: output_user_table

- name: Undeploy Ghost (deleting data)
  include_role:
    name: ghost_undeploy
  inlude_role:
    name: delete_data


#
#- import_playbook: deploy-ghost.yml tags='updateDB'
#
#- name: Check 'user' table from ghost
#  shell: kubectl exec -it {{ mysql_name_pod }} -- mysql --user="{{ database_user }}" --password="{{ database_password }}" --database="{{ database_name }}" -e "SELECT * FROM users;"
#  register: output_user_table
#
#- name: Test if Ghost is running
#  include_role:
#    name: test_ghost
#
#- name: Deploy Ghost
#  include_role:
#    name: ghost_deploy
#
#- import_playbook: deploy-ghost.yml
#
#- name: Tests
#  hosts: localhost
#  gather_facts: yes
#  roles:
#    - { role: test_ghost }
#
#- import_playbook: undeploy-ghost.yml delete_data='true'