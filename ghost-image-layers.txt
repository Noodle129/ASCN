ADD file:5bd53bff884e470b3c12425132975ab9c6f99002c62c43bca1ff5cde9d863b92 in / 

CMD ["bash"]

/bin/sh -c groupadd --gid 1000 node   && 
useradd --uid 1000 --gid node --shell /bin/bash --create-home node

ENV NODE_VERSION=16.17.0

/bin/sh -c ARCH= && 
dpkgArch="$(dpkg --print-architecture)"  &&
case "${dpkgArch##*-}" in       amd64) ARCH='x64';;       ppc64el) ARCH='ppc64le';;       s390x) ARCH='s390x';;       arm64) ARCH='arm64';;       armhf) ARCH='armv7l';;       i386) ARCH='x86';;       *) echo "unsupported architecture"; exit 1 ;;     esac     && 
set -ex     && 
apt-get update && 
apt-get install -y ca-certificates curl wget gnupg dirmngr xz-utils libatomic1 --no-install-recommends     && 
rm -rf /var/lib/apt/lists/*     && 
for key in       
    4ED778F539E3634C779C87C6D7062848A1AB005C     
    141F07595B7B3FFE74309A937405533BE57C7D57       
    94AE36675C464D64BAFA68DD7434390BDBE9B9C5       
    74F12602B6F1C4E913FAA37AD3A89613643B6201       
    71DCFD284A79C3B38668286BC97EC7A07EDE3FC1       
    61FC681DFB92A079F1685E77973F295594EC4689       
    8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600       
    C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8       
    890C08DB8579162FEE0DF9DB8BEAB4DFCF555EF4       
    C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C            
    DD8F2338BAE7501E3DD5AC78C273792F7D83545D       
    A48C2BEE680E841632CD4E44F07496B3EB3C1762       
    108F52B48DB57BB0CC439B2997B01419BD92F80A       
    B9E2F5981AA6E0CD28160D9FF13993A75599653C     ; 
do  
    gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys "$key" || gpg --batch --keyserver keyserver.ubuntu.com --recv-keys "$key" ;
done     && 
curl -fsSLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz"     && 
curl -fsSLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc"     && 
gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc     && 
grep " node-v$NODE_VERSION-linux-$ARCH.tar.xz\$" SHASUMS256.txt | sha256sum -c -     && 
tar -xJf "node-v$NODE_VERSION-linux-$ARCH.tar.xz" -C /usr/local --strip-components=1 --no-same-owner     && 
rm "node-v$NODE_VERSION-linux-$ARCH.tar.xz" SHASUMS256.txt.asc SHASUMS256.txt     && 
apt-mark auto '.*' > /dev/null     && 
find /usr/local -type f -executable -exec ldd '{}' ';'       | awk '/=>/ { print $(NF-1) }'       | sort -u       | xargs -r dpkg-query --search       | cut -d: -f1       | sort -u       | xargs -r apt-mark manual     && 
apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false && 
ln -s /usr/local/bin/node /usr/local/bin/nodejs     && 
node --version     && 
npm --version

ENV YARN_VERSION=1.22.19

/bin/sh -c set -ex   && 
savedAptMark="$(apt-mark showmanual)"   && 
apt-get update && 
apt-get install -y ca-certificates curl wget gnupg dirmngr --no-install-recommends   && 
rm -rf /var/lib/apt/lists/*   && 
for key in     6A010C5166006599AA17F08146C2130DFD2497F5   ; 
do     
    gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys "$key" ||     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys "$key" ;   
done   && 
curl -fsSLO --compressed "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz"   && 
curl -fsSLO --compressed "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc"   && 
gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   && 
mkdir -p /opt   && 
tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/   && 
ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn   && 
ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg   && 
rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   && 
apt-mark auto '.*' > /dev/null   && 
{ [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null; }   && 
find /usr/local -type f -executable -exec ldd '{}' ';'     | awk '/=>/ { print $(NF-1) }'     | sort -u     | xargs -r dpkg-query --search     | cut -d: -f1     | sort -u     | xargs -r apt-mark manual   && 
apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false   && 
yarn --version

COPY file:4d192565a7220e135cab6c77fbc1c73211b69f3d9fb37e62857b2c6eb9363d51 in /usr/local/bin/ 

ENTRYPOINT ["docker-entrypoint.sh"]

CMD ["node"]

ENV GOSU_VERSION=1.12

/bin/sh -c set -eux; 	
savedAptMark="$(apt-mark showmanual)"; 	
apt-get update; 	
apt-get install -y --no-install-recommends ca-certificates dirmngr gnupg wget; 	
rm -rf /var/lib/apt/lists/*; 		
dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"; 	
wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"; 	
wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"; 		
export GNUPGHOME="$(mktemp -d)"; 	
gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; 	
gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; 	
command -v gpgconf && gpgconf --kill all || :; 	
rm -rf "$GNUPGHOME" /usr/local/bin/gosu.asc; 		
apt-mark auto '.*' > /dev/null; 	
[ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null; 	
apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; 		
chmod +x /usr/local/bin/gosu; 	
gosu --version; 	
gosu nobody true

ENV NODE_ENV=production

ENV GHOST_CLI_VERSION=1.23.0

/bin/sh -c set -eux; 	
npm install -g "ghost-cli@$GHOST_CLI_VERSION"; 	
npm cache clean --force

ENV GHOST_INSTALL=/var/lib/ghost

ENV GHOST_CONTENT=/var/lib/ghost/content

ENV GHOST_VERSION=5.14.1

/bin/sh -c set -eux; 	
mkdir -p "$GHOST_INSTALL"; 	
chown node:node "$GHOST_INSTALL"; 		
savedAptMark="$(apt-mark showmanual)"; 	
aptPurge=; 		
installCmd='gosu node ghost install "$GHOST_VERSION" --db mysql --dbhost mysql --no-prompt --no-stack --no-setup --dir "$GHOST_INSTALL"'; 	
if ! eval "$installCmd"; 
then 		
    aptPurge=1; 		
    apt-get update; 		
    apt-get install -y --no-install-recommends g++ make python3; 		
    eval "$installCmd"; 	
fi; 		
cd "$GHOST_INSTALL"; 	
gosu node ghost config --no-prompt --ip '::' --port 2368 --url 'http://localhost:2368'; 	
gosu node ghost config paths.contentPath "$GHOST_CONTENT"; 		
gosu node ln -s config.production.json "$GHOST_INSTALL/config.development.json"; 	
readlink -f "$GHOST_INSTALL/config.development.json"; 		
mv "$GHOST_CONTENT" "$GHOST_INSTALL/content.orig"; 	
mkdir -p "$GHOST_CONTENT"; 	
chown node:node "$GHOST_CONTENT"; 	
chmod 1777 "$GHOST_CONTENT"; 		
cd "$GHOST_INSTALL/current"; 	
packages="$(node -p 'var ghost = require("./package.json"); 
                     var transform = require("./node_modules/@tryghost/image-transform/package.json");
                     ["sharp@" + transform.optionalDependencies["sharp"],"sqlite3@" + ghost.optionalDependencies["sqlite3"],].join(" ")
                    '
            )"; 	
if echo "$packages" | grep 'undefined'; 
then 
    exit 1; 
fi; 	
for package in $packages; 
do 		
    installCmd='gosu node yarn add "$package" --force'; 		
    if ! eval "$installCmd"; 
    then 			
        aptPurge=1; 			
        apt-get update; 			
        apt-get install -y --no-install-recommends g++ make python3; 			
        case "$package" in sharp@*) 
            echo >&2 "sorry: libvips 8.10 in Debian bullseye is not new enough (8.12.2+) for sharp 0.30 ðŸ˜ž"; 
            continue ;
            ; 		
        esac; 						
        eval "$installCmd --build-from-source";
    fi; 	
done; 		
if [ -n "$aptPurge" ]; 
then 		
    apt-mark showmanual | xargs apt-mark auto > /dev/null; 		
    [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark; 		
    apt-get purge -y --auto-remove; 		
    rm -rf /var/lib/apt/lists/*; 	
fi; 		
gosu node yarn cache clean; 	
gosu node npm cache clean --force; 	
npm cache clean --force; 	
rm -rv /tmp/yarn* /tmp/v8*

WORKDIR /var/lib/ghost

VOLUME [/var/lib/ghost/content]

COPY file:303989b132b5193e832753e2c7236a4050fdc0fe60a54dc1f0c4a44422a2d1ca in /usr/local/bin 

ENTRYPOINT ["docker-entrypoint.sh"]

EXPOSE 2368

CMD ["node" "current/index.js"]
